<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\controllers\base;

use backend\models\Team;
    use backend\models\TeamSearch;
use yii\web\Controller;
use yii\web\UploadedFile;
use yii\web\HttpException;
use yii\helpers\Url;
use yii\filters\AccessControl;
use dmstr\bootstrap\Tabs;

/**
* TeamController implements the CRUD actions for Team model.
*/
class TeamController extends Controller
{


/**
* @var boolean whether to enable CSRF validation for the actions in this controller.
* CSRF validation is enabled only when both this property and [[Request::enableCsrfValidation]] are true.
*/
public $enableCsrfValidation = false;


/**
* Lists all Team models.
* @return mixed
*/
public function actionIndex()
{
    $searchModel  = new TeamSearch;
    $dataProvider = $searchModel->search($_GET);

Tabs::clearLocalStorage();

Url::remember();
\Yii::$app->session['__crudReturnUrl'] = null;

return $this->render('index', [
'dataProvider' => $dataProvider,
    'searchModel' => $searchModel,
]);
}

/**
* Displays a single Team model.
* @param integer $id
*
* @return mixed
*/
public function actionView($id)
{
\Yii::$app->session['__crudReturnUrl'] = Url::previous();
Url::remember();
Tabs::rememberActiveState();

return $this->render('view', [
'model' => $this->findModel($id),
]);
}

/**
* Creates a new Team model.
* If creation is successful, the browser will be redirected to the 'view' page.
* @return mixed
*/
public function actionCreate()
{
$model = new Team;

try {
            if ($model->load($_POST)) {
                $gbr = UploadedFile::getInstance($model, 'foto');
                //$gambar = UploadedFile::getInstance($model, 'gambar');
                if ($gbr != NULL) {
                    $model->foto = $gbr->name;
                    $arr = explode(".", $gbr->name);
                    $extension = end($arr);
                    $model->foto = \Yii::$app->security->generateRandomString() . ".{$extension}";
                    $path = \Yii::getAlias("@frontend/web/uploads/team/") . $model->foto;
                    $gbr->saveAs($path);
                }
                if ($gbr == NULL) {
                    $model->foto = "default.png";
                }

                if ($model->save()) {
                    \Yii::$app->session->addFlash("success", "Data Tersimpan.");
                    return $this->redirect(['view', 'id' => $model->id]);
                } elseif (!\Yii::$app->request->isPost) {
                    $model->load($_GET);
                }
                $model->load($_GET);
            }
        } catch (\Exception $e) {
            $msg = (isset($e->errorInfo[2])) ? $e->errorInfo[2] : $e->getMessage();
            $model->addError('_exception', $msg);
        }
        return $this->render('create', ['model' => $model]);
}

/**
* Updates an existing Team model.
* If update is successful, the browser will be redirected to the 'view' page.
* @param integer $id
* @return mixed
*/
public function actionUpdate($id)
{
$model = $this->findModel($id);
        $oldBackground = $model->foto;
        //$oldGambar = $model->gambar;
        if ($model->load($_POST)) {
            $background = UploadedFile::getInstance($model, 'foto');
            //$gambar = UploadedFile::getInstance($model, 'gambar');
            if ($background != NULL) {
                $model->foto = $background->name;
                $arr = explode(".", $background->name);
                $extension = end($arr);
                $model->foto = \Yii::$app->security->generateRandomString() . ".{$extension}";
                $path = \Yii::getAlias("@frontend/web/uploads/team/") . $model->foto;
                $background->saveAs($path);
            } else {
                $model->foto = $oldBackground;
            }
            if ($model->save()) {
                \Yii::$app->session->addFlash("success", "Team successfully updated.");
            } else {
                \Yii::$app->session->addFlash("danger", "Team cannot updated.");
            }
            return $this->redirect(['view', 'id' => $model->id]);
        }
        return $this->render('update', [
            'model' => $model,
        ]);
}

/**
* Deletes an existing Team model.
* If deletion is successful, the browser will be redirected to the 'index' page.
* @param integer $id
* @return mixed
*/
public function actionDelete($id)
{
try {
$this->findModel($id)->delete();
} catch (\Exception $e) {
$msg = (isset($e->errorInfo[2]))?$e->errorInfo[2]:$e->getMessage();
\Yii::$app->getSession()->addFlash('error', $msg);
return $this->redirect(Url::previous());
}

// TODO: improve detection
$isPivot = strstr('$id',',');
if ($isPivot == true) {
return $this->redirect(Url::previous());
} elseif (isset(\Yii::$app->session['__crudReturnUrl']) && \Yii::$app->session['__crudReturnUrl'] != '/') {
Url::remember(null);
$url = \Yii::$app->session['__crudReturnUrl'];
\Yii::$app->session['__crudReturnUrl'] = null;

return $this->redirect($url);
} else {
return $this->redirect(['index']);
}
}

/**
* Finds the Team model based on its primary key value.
* If the model is not found, a 404 HTTP exception will be thrown.
* @param integer $id
* @return Team the loaded model
* @throws HttpException if the model cannot be found
*/
protected function findModel($id)
{
if (($model = Team::findOne($id)) !== null) {
return $model;
} else {
throw new HttpException(404, 'The requested page does not exist.');
}
}
}

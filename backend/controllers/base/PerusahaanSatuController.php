<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\controllers\base;

use backend\models\PerusahaanSatu;
use backend\models\PerusahaanSatuSearch;
use yii\web\Controller;
use yii\web\HttpException;
use yii\helpers\Url;
use Yii;
use yii\filters\AccessControl;
use dmstr\bootstrap\Tabs;
use yii\web\UploadedFile;

/**
 * PerusahaanSatuController implements the CRUD actions for PerusahaanSatu model.
 */
class PerusahaanSatuController extends Controller
{


    /**
     * @var boolean whether to enable CSRF validation for the actions in this controller.
     * CSRF validation is enabled only when both this property and [[Request::enableCsrfValidation]] are true.
     */
    public $enableCsrfValidation = false;


    /**
     * Lists all PerusahaanSatu models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new PerusahaanSatuSearch;
        $cek = PerusahaanSatu::find()->where(['id_user' => Yii::$app->user->identity->id])->count();
        if(Yii::$app->user->identity->type == 2) {
            $dataProvider = $searchModel->search($_GET);
            $dataProvider->query->andWhere(['id_user' => Yii::$app->user->identity->id]);

        } else {
            $dataProvider = $searchModel->search($_GET);
        }
        Tabs::clearLocalStorage();

        Url::remember();
        \Yii::$app->session['__crudReturnUrl'] = null;

        return $this->render('index', [
            'dataProvider' => $dataProvider,
            'searchModel' => $searchModel,
            'cek' => $cek
        ]);
    }

    /**
     * Displays a single PerusahaanSatu model.
     * @param integer $id
     *
     * @return mixed
     */
    public function actionView($id)
    {
        \Yii::$app->session['__crudReturnUrl'] = Url::previous();
        Url::remember();
        Tabs::rememberActiveState();

        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new PerusahaanSatu model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new PerusahaanSatu;
        try {
            if ($model->load($_POST)) {
                $logo = UploadedFile::getInstance($model, 'logo_perusahaan');
                $portofolio = UploadedFile::getInstance($model, 'portofolio_perusahaan');
                $foto_dokumen = UploadedFile::getInstance($model, 'foto_dokumentasi');
                $company_profile = UploadedFile::getInstance($model, 'upload_company_profile');
                if ($logo != NULL) {
                    $model->logo_perusahaan = $logo->name;
                    $arr = explode(".", $logo->name);
                    $extension = end($arr);
                    $model->logo_perusahaan = Yii::$app->security->generateRandomString() . ".{$extension}";
                    $path = Yii::getAlias("@backend/web/uploads/perusahaan_st/") . $model->logo_perusahaan;
                    $logo->saveAs($path);
                }
                if ($portofolio != NULL) {
                    $model->portofolio_perusahaan = $portofolio->name;
                    $arr = explode(".", $portofolio->name);
                    $extension = end($arr);
                    $model->portofolio_perusahaan = Yii::$app->security->generateRandomString() . ".{$extension}";
                    $path = Yii::getAlias("@backend/web/uploads/perusahaan_st/") . $model->portofolio_perusahaan;
                    $portofolio->saveAs($path);
                }
                if ($foto_dokumen != NULL) {
                    $model->foto_dokumentasi = $foto_dokumen->name;
                    $arr = explode(".", $foto_dokumen->name);
                    $extension = end($arr);
                    $model->foto_dokumentasi = Yii::$app->security->generateRandomString() . ".{$extension}";
                    $path = Yii::getAlias("@backend/web/uploads/perusahaan_st/") . $model->foto_dokumentasi;
                    $foto_dokumen->saveAs($path);
                }
                if ($company_profile != NULL) {
                    $model->upload_company_profile = $company_profile->name;
                    $arr = explode(".", $company_profile->name);
                    $extension = end($arr);
                    $model->upload_company_profile = Yii::$app->security->generateRandomString() . ".{$extension}";
                    $path = Yii::getAlias("@app/web/uploads/perusahaan_st/") . $model->upload_company_profile;
                    $company_profile->saveAs($path);
                }
                if ($logo == NULL) {
                    $model->logo_perusahaan = "default.png";
                }
                if ($portofolio == NULL) {
                    $model->portofolio_perusahaan = "default.png";
                }
                if ($foto_dokumen == NULL) {
                    $model->foto_dokumentasi = "default.png";
                }
                if ($company_profile == NULL) {
                    $model->upload_company_profile = "default.png";
                }

                if ($model->save()) {
                    Yii::$app->session->addFlash("success", "Data Tersimpan.");
                    return $this->redirect(['view', 'id' => $model->id]);
                } elseif (!\Yii::$app->request->isPost) {
                    $model->load($_GET);
                }
                $model->load($_GET);
            }

        } catch (\Exception $e) {
            $msg = (isset($e->errorInfo[2])) ? $e->errorInfo[2] : $e->getMessage();
            $model->addError('_exception', $msg);
        }
        return $this->render('create', [
            'model' => $model
        ]);
    }

    /**
     * Updates an existing PerusahaanSatu model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);
        $oldLogo = $model->logo_perusahaan;
        $oldPortofolio = $model->portofolio_perusahaan;
        $oldFoto = $model->foto_dokumentasi;
        $oldCompany = $model->upload_company_profile;
        if ($model->load($_POST)) {
            $logo = UploadedFile::getInstance($model, 'logo_perusahaan');
            $portofolio = UploadedFile::getInstance($model, 'portofolio_perusahaan');
            $foto_dokumen = UploadedFile::getInstance($model, 'foto_dokumentasi');
            $company_profile = UploadedFile::getInstance($model, 'upload_company_profile');
            if ($logo != NULL) {
                $model->logo_perusahaan = $logo->name;
                $arr = explode(".", $logo->name);
                $extension = end($arr);
                $model->logo_perusahaan = Yii::$app->security->generateRandomString() . ".{$extension}";
                $path = Yii::getAlias("@backend/web/uploads/perusahaan_st/") . $model->logo_perusahaan;
                $logo->saveAs($path);
            } else {
                $model->logo_perusahaan = $oldLogo;
            }
            if ($portofolio != NULL) {
                $model->portofolio_perusahaan = $portofolio->name;
                $arr = explode(".", $portofolio->name);
                $extension = end($arr);
                $model->portofolio_perusahaan = Yii::$app->security->generateRandomString() . ".{$extension}";
                $path = Yii::getAlias("@backend/web/uploads/perusahaan_st/") . $model->portofolio_perusahaan;
                $portofolio->saveAs($path);
            } else {
                $model->portofolio_perusahaan = $oldPortofolio;
            }
            if ($foto_dokumen != NULL) {
                $model->foto_dokumentasi = $foto_dokumen->name;
                $arr = explode(".", $foto_dokumen->name);
                $extension = end($arr);
                $model->foto_dokumentasi = Yii::$app->security->generateRandomString() . ".{$extension}";
                $path = Yii::getAlias("@backend/web/uploads/perusahaan_st/") . $model->foto_dokumentasi;
                $foto_dokumen->saveAs($path);
            } else {
                $model->foto_dokumentasi = $oldFoto;
            }
            if ($company_profile != NULL) {
                $model->upload_company_profile= $company_profile->name;
                $arr = explode(".", $company_profile->name);
                $extension = end($arr);
                $model->upload_company_profile = Yii::$app->security->generateRandomString() . ".{$extension}";
                $path = Yii::getAlias("@backend/web/uploads/perusahaan_st/") . $model->upload_company_profile;
                $company_profile->saveAs($path);
            } else {
                $model->upload_company_profile = $oldCompany;
            }
            if ($model->save()) {
                Yii::$app->session->addFlash("success", "Data Perusahaan successfully updated.");
            } else {
                Yii::$app->session->addFlash("danger", "Data Perusahaan cannot updated.");
            }
            return $this->redirect(['view', 'id' => $model->id]);
        }
        return $this->render('update', [
            'model' => $model,
        ]);
    }

    /**
     * Deletes an existing PerusahaanSatu model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        try {
            $this->findModel($id)->delete();
        } catch (\Exception $e) {
            $msg = (isset($e->errorInfo[2])) ? $e->errorInfo[2] : $e->getMessage();
            \Yii::$app->getSession()->addFlash('error', $msg);
            return $this->redirect(Url::previous());
        }

// TODO: improve detection
        $isPivot = strstr('$id', ',');
        if ($isPivot == true) {
            return $this->redirect(Url::previous());
        } elseif (isset(\Yii::$app->session['__crudReturnUrl']) && \Yii::$app->session['__crudReturnUrl'] != '/') {
            Url::remember(null);
            $url = \Yii::$app->session['__crudReturnUrl'];
            \Yii::$app->session['__crudReturnUrl'] = null;

            return $this->redirect($url);
        } else {
            return $this->redirect(['index']);
        }
    }

    /**
     * Finds the PerusahaanSatu model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return PerusahaanSatu the loaded model
     * @throws HttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = PerusahaanSatu::findOne($id)) !== null) {
            return $model;
        } else {
            throw new HttpException(404, 'The requested page does not exist.');
        }
    }
}
